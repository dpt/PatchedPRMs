From 79b4a79094b5a7784a97e88edc51d0e3b2fff9de Mon Sep 17 00:00:00 2001
From: David Thomas <dave@davespace.co.uk>
Date: Thu, 4 Mar 2021 00:05:26 +0000
Subject: [PATCH 14/24] =?UTF-8?q?13:=20Replace=20substitute=20PNG=20for=20?=
 =?UTF-8?q?8734=20with=20a=20proper=20=E2=88=9E=20character?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 PRM/FLOATINGPOINT.HTML    |  26 +++++++++++++-------------
 SYMBOLS/ENTITIES/8734.PNG | Bin 226 -> 0 bytes
 TOOLBOX/ASM/FPINSTRS.HTML |  26 +++++++++++++-------------
 3 files changed, 26 insertions(+), 26 deletions(-)
 delete mode 100644 SYMBOLS/ENTITIES/8734.PNG

diff --git a/PRM/FLOATINGPOINT.HTML b/PRM/FLOATINGPOINT.HTML
index 2983060..e3dbca8 100644
--- a/PRM/FLOATINGPOINT.HTML
+++ b/PRM/FLOATINGPOINT.HTML
@@ -95,7 +95,7 @@
 <li>If the <a name="marker-110429"></a>exponent is 0 and the fraction is 0, the number represented is ±0.
 <li>If the exponent is 0 and the fraction is non-zero, the number represented is ±0.<i>fraction</i> × 2<sup>-126</sup>.
 <li>If the exponent is in the range 1 to 254, the number represented is ±1.<i>fraction</i> × 2 <sup><i>exponent</i> - 127</sup>.
-<li>If the exponent is 255 and the fraction is 0, the number represented is <a name="marker-110427"></a>±<img src="../SYMBOLS/ENTITIES/8734.PNG" alt="[INFINITY]">.
+<li>If the exponent is 255 and the fraction is 0, the number represented is <a name="marker-110427"></a>±∞.
 <li>If the exponent is 255 and the fraction is non-zero, a <a name="marker-110425"></a>NaN (not-a-number) is represented. If the most significant bit of the fraction is set, it is a non-trapping NaN; otherwise it is a trapping NaN.
 </ul>
 
@@ -109,7 +109,7 @@
 <li>If the exponent is 0 and the fraction is 0, the number represented is ±0.
 <li>If the exponent is 0 and the fraction is non-zero, the number represented is ±0.<i>fraction</i> × 2 <sup>-1022</sup>.
 <li>If the exponent is in the range 1 to 2046, the number represented is ±1.<i>fraction</i> × 2 <sup><i>exponent</i> - 1023</sup>.
-<li>If the exponent is 2047 and the fraction is 0, the number represented is ±<img src="../SYMBOLS/ENTITIES/8734.PNG" alt="[INFINITY]">.
+<li>If the exponent is 2047 and the fraction is 0, the number represented is ±∞.
 <li>If the exponent is 2047 and the fraction is non-zero, a NaN (not-a-number) is represented. If the most significant bit of the fraction is set, it is a non-trapping NaN; otherwise it is a trapping NaN.
 </ul>
 
@@ -123,7 +123,7 @@
 <li>If the exponent is 0, J is 0, and the fraction is 0, the number represented is ±0.
 <li>If the exponent is 0, J is 0, and the fraction is non-zero, the number represented is ±0.<i>fraction</i> × 2 <sup>-16382</sup>.
 <li>If the exponent is in the range 0 to 32766, J is 1, and the fraction is non-zero, the number represented is ±1.<i>fraction</i> × 2 <sup><i>exponent</i> - 16383</sup>.
-<li>If the exponent is 32767, J is 0, and the fraction is 0, the number represented is ±<img src="../SYMBOLS/ENTITIES/8734.PNG" alt="[INFINITY]">.
+<li>If the exponent is 32767, J is 0, and the fraction is 0, the number represented is ±∞.
 <li>If the exponent is 32767 and the fraction is non-zero, a NaN (not-a-number) is represented. If the most significant bit of the fraction is set, it is a non-trapping NaN; otherwise it is a trapping NaN.
 </ul>
 <p>Other values are illegal and shall not be used (ie the exponent is in the range 1 to 32766 and J is 0; or the exponent is 32767, J is 1, and the fraction is 0).</p>
@@ -138,12 +138,12 @@
 <i>Packed decimal format</i></p>
 <p>The sign nibble contains both the significand's sign (top bit) and the exponent's sign (next bit); the other two bits are zero.</p>
 <p>d18 is the most significant digit of the significand <i>d</i>, and e3 of the exponent <i>e</i>. The significand has an assumed decimal point between d18 and d17, and is normalised so that for a normal number l <img src="../SYMBOLS/ENTITIES/8804.PNG" alt="&LT;="> D18 <img src="../SYMBOLS/ENTITIES/8804.PNG" alt="&LT;="> 9. The guaranteed ranges for <i>d</i> and <i>e</i> are 17 and 3 digits respectively; d0, d1 and e3 may always be zero in a particular system. (By comparison, an S format number has 9 digits of significand and a maximum exponent of 53; a D format number has 17 digits in the significand and a maximum exponent of 340.)</p>
-<p>The result is undefined if any of the packed digits is hexadecimal A - F, save for a representation of ±<img src="../SYMBOLS/ENTITIES/8734.PNG" alt="[INFINITY]"> or a NaN (see below).</p>
+<p>The result is undefined if any of the packed digits is hexadecimal A - F, save for a representation of ±∞ or a NaN (see below).</p>
 <ul>
 <li>If the exponent's sign is 0, the exponent is 0, and the significand is 0, the number represented is ±0.
 <li>If the exponent is in the range 0 to 9999 and the significand is in the range 1 to 9.999999999999999999, the number represented is ±<i>d</i> × 10<sup><i> ±e</i></sup>
 .
-<li>If the exponent is &amp;FFFF (ie all the bits in e3 - e0 are set) and the significand is 0, the number represented is ±<img src="../SYMBOLS/ENTITIES/8734.PNG" alt="[INFINITY]">.
+<li>If the exponent is &amp;FFFF (ie all the bits in e3 - e0 are set) and the significand is 0, the number represented is ±∞.
 <li>If the exponent is &amp;FFFF and d0 - d17 are non-zero, a NaN (not-a-number) is represented. If the most significant bit of d18 is set, it is a non-trapping NaN; otherwise it is a trapping NaN.
 </ul>
 <p>All other combinations are undefined.</p>
@@ -156,12 +156,12 @@
 <i>Expanded packed decimal format</i></p>
 <p>The sign nibble contains both the significand's sign (top bit) and the exponent's sign (next bit); the other two bits are zero.</p>
 <p>d23 is the most significant digit of the significand <i>d</i>, and e6 of the exponent <i>e</i>. The significand has an assumed decimal point between d23 and d22, and is normalised so that for a normal number l <img src="../SYMBOLS/ENTITIES/8804.PNG" alt="&LT;="> D23 <img src="../SYMBOLS/ENTITIES/8804.PNG" alt="&LT;="> 9. The guaranteed ranges for <i>d</i> and <i>e</i> are 21 and 4 digits respectively; d0, d1, d2, e4, e5 and e6 may always be zero in a particular system. (By comparison, an S format number has 9 digits of significand and a maximum exponent of 53; a D format number has 17 digits in the significand and a maximum exponent of 340.)</p>
-<p>The result is undefined if any of the packed digits is hexadecimal A - F, save for a representation of ±<img src="../SYMBOLS/ENTITIES/8734.PNG" alt="[INFINITY]"> or a NaN (see below).</p>
+<p>The result is undefined if any of the packed digits is hexadecimal A - F, save for a representation of ±∞ or a NaN (see below).</p>
 <ul>
 <li>If the exponent's sign is 0, the exponent is 0, and the significand is 0, the number represented is ±0.
 <li>If the exponent is in the range 0 to 9999999 and the significand is in the range 1 to 9.99999999999999999999999, the number represented is ±<i>d</i> × 10<sup><i> ±e</i></sup>
 .
-<li>If the exponent is &amp;FFFFFFF (ie all the bits in e6 - e0 are set) and the significand is 0, the number represented is ±<img src="../SYMBOLS/ENTITIES/8734.PNG" alt="[INFINITY]">.<A NAME="MARKER-110428"></a>
+<li>If the exponent is &amp;FFFFFFF (ie all the bits in e6 - e0 are set) and the significand is 0, the number represented is ±∞.<A NAME="MARKER-110428"></a>
 <li>If the <a name="marker-110430"></a>exponent is &amp;FFFFFFF and d0 - d22 are non-zero, a NaN (not-a-number) is represented. If the most significant bit of d23 is set, it is a non-trapping NaN; otherwise it is a trapping NaN.<a name="marker-110426"></a>
 </ul>
 <p>All other combinations are undefined.</p>
@@ -299,15 +299,15 @@
 <p>The IVO flag is set when an operand is <a name="marker-110449"></a>invalid for the operation to be performed. Invalid operations are:</p>
 <ul>
 <li>Any operation on a trapping <a name="marker-110450"></a>NaN (not-a-number) 
-<li>Magnitude subtraction of <a name="marker-110451"></a>infinities, eg +<img src="../SYMBOLS/ENTITIES/8734.PNG" alt="[INFINITY]"> P -<img src="../SYMBOLS/ENTITIES/8734.PNG" alt="[INFINITY]"> 
-<li>Multiplication of 0 by ±<img src="../SYMBOLS/ENTITIES/8734.PNG" alt="[INFINITY]"> 
-<li>Division of 0/0 or <img src="../SYMBOLS/ENTITIES/8734.PNG" alt="[INFINITY]">/<img src="../SYMBOLS/ENTITIES/8734.PNG" alt="[INFINITY]"> 
-<li>x REM y where x = <img src="../SYMBOLS/ENTITIES/8734.PNG" alt="[INFINITY]"> or y = 0 
+<li>Magnitude subtraction of <a name="marker-110451"></a>infinities, eg +∞ P -∞ 
+<li>Multiplication of 0 by ±∞ 
+<li>Division of 0/0 or ∞/∞ 
+<li>x REM y where x = ∞ or y = 0 
 <li>Square root of any number &lt; 0 (but √(-0) = -0) 
-<li>Conversion to integer or decimal when overflow, <img src="../SYMBOLS/ENTITIES/8734.PNG" alt="[INFINITY]"> or a NaN operand make it impossible
+<li>Conversion to integer or decimal when overflow, ∞ or a NaN operand make it impossible
 <li>Comparison with exceptions of Unordered operands
 <li>ACS, ASN when argument's absolute value is &gt; 1 
-<li>SIN, COS, TAN when argument is ±<img src="../SYMBOLS/ENTITIES/8734.PNG" alt="[INFINITY]">
+<li>SIN, COS, TAN when argument is ±∞
 <li>LOG, LGN when argument is <img src="../SYMBOLS/ENTITIES/8804.PNG" alt="&LT;="> 0
 <li>POW when first operand is &lt; 0 and second operand is not an integer, or first operand is 0 and second operand is <img src="../SYMBOLS/ENTITIES/8804.PNG" alt="&LT;="> 0
 <li>RPW when first operand is not an integer and second operand is &lt; 0, or first operand is <img src="../SYMBOLS/ENTITIES/8804.PNG" alt="&LT;="> 0 and second operand is 0.
diff --git a/SYMBOLS/ENTITIES/8734.PNG b/SYMBOLS/ENTITIES/8734.PNG
deleted file mode 100644
index fb82e6eabfe851c32c79cb7267054c55aa5b1b4f..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 226
zcmV<803H8{P)<h;3K|Lk000e1NJLTq000sI000OG00000(dh7Y00002bW%=J009A%
z{jLB20GmlfK~#9!1;L>T!e9V}(eKI_e^@XKSr+5M!h*rDAm}43*xdv82F3-W(WoF;
z#bz6VG7w?G?!XmcBI1hYNbC;QXlw(|&BdE`K{Nc&@^dM5yvTKOk+YD>iCM?as!<&d
z#N3f2rMQJ8EvZ}P`vHEZ_Ui`lHipu~RkIIz#nMXd%Dh-;YrrJ6l=Xq2lEmX^MI8XH
cXK!fp2W2BE^j8SkW&i*H07*qoM6N<$g5)q@7XSbN

diff --git a/TOOLBOX/ASM/FPINSTRS.HTML b/TOOLBOX/ASM/FPINSTRS.HTML
index 09452dd..a3e3bc5 100644
--- a/TOOLBOX/ASM/FPINSTRS.HTML
+++ b/TOOLBOX/ASM/FPINSTRS.HTML
@@ -87,7 +87,7 @@
 <li>If the <a name="marker-216091"></a>exponent is 0 and the fraction is 0, the number represented is ±0.
 <li>If the exponent is 0 and the fraction is non-zero, the number represented is ±0.<i>fraction</i> × 2<sup>-126</sup>.
 <li>If the exponent is in the range 1 to 254, the number represented is ±1.<i>fraction</i> × 2<sup><i>exponent</i> - 127</sup>.
-<li>If the exponent is 255 and the fraction is 0, the number represented is <a name="marker-216095"></a>±<img src="../../SYMBOLS/ENTITIES/8734.PNG" alt="[INFINITY]">.
+<li>If the exponent is 255 and the fraction is 0, the number represented is <a name="marker-216095"></a>±∞.
 <li>If the exponent is 255 and the fraction is non-zero, a <a name="marker-216097"></a>NaN (not-a-number) is represented. If the most significant bit of the fraction is set, it is a non-trapping NaN; otherwise it is a trapping NaN.
 </ul>
 
@@ -101,7 +101,7 @@
 <li>If the exponent is 0 and the fraction is 0, the number represented is ±0.
 <li>If the exponent is 0 and the fraction is non-zero, the number represented is ±0.<i>fraction</i> × 2<sup>-1022</sup>.
 <li>If the exponent is in the range 1 to 2046, the number represented is ±1.<i>fraction</i> × 2<sup><i>exponent</i> - 1023</sup>.
-<li>If the exponent is 2047 and the fraction is 0, the number represented is ±<img src="../../SYMBOLS/ENTITIES/8734.PNG" alt="[INFINITY]">.
+<li>If the exponent is 2047 and the fraction is 0, the number represented is ±∞.
 <li>If the exponent is 2047 and the fraction is non-zero, a NaN (not-a-number) is represented. If the most significant bit of the fraction is set, it is a non-trapping NaN; otherwise it is a trapping NaN.
 </ul>
 
@@ -115,7 +115,7 @@
 <li>If the exponent is 0, J is 0, and the fraction is 0, the number represented is ±0.
 <li>If the exponent is 0, J is 0, and the fraction is non-zero, the number represented is ±0.<i>fraction</i> × 2<sup>-16382</sup>.
 <li>If the exponent is in the range 0 to 32766, J is 1, and the fraction is non-zero, the number represented is ±1.<i>fraction</i> × 2<sup><i> exponent</i> - 16383</sup>.
-<li>If the exponent is 32767, J is 0, and the fraction is 0, the number represented is ±<img src="../../SYMBOLS/ENTITIES/8734.PNG" alt="[INFINITY]">.
+<li>If the exponent is 32767, J is 0, and the fraction is 0, the number represented is ±∞.
 <li>If the exponent is 32767 and the fraction is non-zero, a NaN (not-a-number) is represented. If the most significant bit of the fraction is set, it is a non-trapping NaN; otherwise it is a trapping NaN.
 </ul>
 <p>Other values are illegal and shall not be used (ie the exponent is in the range 1 to 32766 and J is 0; or the exponent is 32767, J is 1, and the fraction is 0).</p>
@@ -130,14 +130,14 @@
 </p>
 <p>The sign nibble contains both the significand's sign (top bit) and the exponent's sign (next bit); the other two bits are zero.</p>
 <p>d18 is the most significant digit of the significand <i>d</i>, and e3 of the exponent <i>e</i>. The significand has an assumed decimal point between d18 and d17, and is normalised so that for a normal number l <img src="../../SYMBOLS/ENTITIES/8804.PNG" alt="&LT;="> D18 <img src="../../SYMBOLS/ENTITIES/8804.PNG" alt="&LT;="> 9. The guaranteed ranges for <i>d</i> and <i>e</i> are 17 and 3 digits respectively; d0, d1 and e3 may always be zero in a particular system. (By comparison, an S format number has 9 digits of significand and a maximum exponent of 53; a D format number has 17 digits in the significand and a maximum exponent of 340.)</p>
-<p>The result is undefined if any of the packed digits is hexadecimal A - F, save for a representation of ±<img src="../../SYMBOLS/ENTITIES/8734.PNG" alt="[INFINITY]"> or a NaN (see below).</p>
+<p>The result is undefined if any of the packed digits is hexadecimal A - F, save for a representation of ±∞ or a NaN (see below).</p>
 <ul>
 <li>If the exponent's sign is 0, the exponent is 0, and the significand is 0, the number represented is ±0.
 </ul>
 <p>Zero will always be output as +0, but either +0 or -0 may be input.</p>
 <ul>
 <li>If the exponent is in the range 0 to 9999 and the significand is in the range 1 to 9.999999999999999999, the number represented is ±<i>d</i> × 10<sup><i>±e</i></sup>.
-<li>If the exponent is &amp;FFFF (ie all the bits in e3 - e0 are set) and the significand is 0, the number represented is ±<img src="../../SYMBOLS/ENTITIES/8734.PNG" alt="[INFINITY]">.
+<li>If the exponent is &amp;FFFF (ie all the bits in e3 - e0 are set) and the significand is 0, the number represented is ±∞.
 <li>If the exponent is &amp;FFFF and d0 - d17 are non-zero, a NaN (not-a-number) is represented. If the most significant bit of d18 is set, it is a non-trapping NaN; otherwise it is a trapping NaN.
 </ul>
 <p>All other combinations are undefined.</p>
@@ -152,14 +152,14 @@
 
 <p>The sign nibble contains both the significand's sign (top bit) and the exponent's sign (next bit); the other two bits are zero.</p>
 <p>d23 is the most significant digit of the significand <i>d</i>, and e6 of the exponent <i>e</i>. The significand has an assumed decimal point between d23 and d22, and is normalised so that for a normal number l <img src="../../SYMBOLS/ENTITIES/8804.PNG" alt="&LT;="> D23 <img src="../../SYMBOLS/ENTITIES/8804.PNG" alt="&LT;="> 9. The guaranteed ranges for <i>d</i> and <i>e</i> are 21 and 4 digits respectively; d0, d1, d2, e4, e5 and e6 may always be zero in a particular system. (By comparison, an S format number has 9 digits of significand and a maximum exponent of 53; a D format number has 17 digits in the significand and a maximum exponent of 340.)</p>
-<p>The result is undefined if any of the packed digits is hexadecimal A - F, save for a representation of ±<img src="../../SYMBOLS/ENTITIES/8734.PNG" alt="[INFINITY]"> or a NaN (see below).</p>
+<p>The result is undefined if any of the packed digits is hexadecimal A - F, save for a representation of ±∞ or a NaN (see below).</p>
 <ul>
 <li>If the exponent's sign is 0, the exponent is 0, and the significand is 0, the number represented is ±0.
 </ul>
 <p>Zero will always be output as +0, but either +0 or -0 may be input.</p>
 <ul>
 <li>If the exponent is in the range 0 to 9999999 and the significand is in the range 1 to 9.99999999999999999999999, the number represented is ±<i>d</i> × 10<sup><i>±e</i></sup>.
-<li>If the exponent is &amp;FFFFFFF (ie all the bits in e6 - e0 are set) and the significand is 0, the number represented is ±<img src="../../SYMBOLS/ENTITIES/8734.PNG" alt="[INFINITY]">.<A NAME="MARKER-216414"></a>
+<li>If the exponent is &amp;FFFFFFF (ie all the bits in e6 - e0 are set) and the significand is 0, the number represented is ±∞.<A NAME="MARKER-216414"></a>
 <li>If the <a name="marker-216415"></a>exponent is &amp;FFFFFFF and d0 - d22 are non-zero, a NaN (not-a-number) is represented. If the most significant bit of d23 is set, it is a non-trapping NaN; otherwise it is a trapping NaN.<a name="marker-216417"></a></ul>
 <p>All other combinations are undefined.</p>
 <p>This format is not available in the old FPE or the FPPC. You should only use it if you can guarantee that the floating point system you are using supports it.<a name="marker-216420"></a></p>
@@ -271,21 +271,21 @@
 <p>The IVO flag is set when an operand is <a name="marker-216610"></a>invalid for the operation to be performed. Invalid operations are:</p>
 <ul>
 <li>Any operation on a trapping <a name="marker-216612"></a>NaN (not-a-number) 
-<li>Magnitude subtraction of <a name="marker-216614"></a>infinities, eg +<img src="../../SYMBOLS/ENTITIES/8734.PNG" alt="[INFINITY]"> P -<img src="../../SYMBOLS/ENTITIES/8734.PNG" alt="[INFINITY]"> 
-<li>Multiplication of 0 by ±<img src="../../SYMBOLS/ENTITIES/8734.PNG" alt="[INFINITY]"> 
-<li>Division of 0/0 or <img src="../../SYMBOLS/ENTITIES/8734.PNG" alt="[INFINITY]">/<img src="../../SYMBOLS/ENTITIES/8734.PNG" alt="[INFINITY]"> 
-<li>x REM y where x = <img src="../../SYMBOLS/ENTITIES/8734.PNG" alt="[INFINITY]"> or y = 0 
+<li>Magnitude subtraction of <a name="marker-216614"></a>infinities, eg +∞ P -∞ 
+<li>Multiplication of 0 by ±∞ 
+<li>Division of 0/0 or ∞/∞ 
+<li>x REM y where x = ∞ or y = 0 
 </ul>
 <p>(REM is the 'remainder after floating point division' operator.)</p>
 <ul>
 <li>Square root of any number &lt; 0 (but √(-0) = -0) 
-<li>Conversion to integer or decimal when overflow, <img src="../../SYMBOLS/ENTITIES/8734.PNG" alt="[INFINITY]"> or a NaN operand make it impossible
+<li>Conversion to integer or decimal when overflow, ∞ or a NaN operand make it impossible
 </ul>
 <p>If overflow makes a conversion to integer impossible, then the largest positive or negative integer is produced (depending on the sign of the operand) and IVO is signalled</p>
 <ul>
 <li>Comparison with exceptions of Unordered operands
 <li>ACS, ASN when argument's absolute value is &gt; 1 
-<li>SIN, COS, TAN when argument is ±<img src="../../SYMBOLS/ENTITIES/8734.PNG" alt="[INFINITY]">
+<li>SIN, COS, TAN when argument is ±∞
 <li>LOG, LGN when argument is <img src="../../SYMBOLS/ENTITIES/8804.PNG" alt="&LT;="> 0
 <li>POW when first operand is &lt; 0 and second operand is not an integer, or first operand is 0 and second operand is <img src="../../SYMBOLS/ENTITIES/8804.PNG" alt="&LT;="> 0
 <li>RPW when first operand is not an integer and second operand is &lt; 0, or first operand is <img src="../../SYMBOLS/ENTITIES/8804.PNG" alt="&LT;="> 0 and second operand is 0.
-- 
2.29.2

